{
    "title": "td-data-schema",
    "description": "Each mandatory and optional vocabulary term as defined in the class DataSchema, MUST be serialized as a JSON name.",
    "$schema ": "http://json-schema.org/draft-06/schema#",
    "is-complex": true,
    "type": "object",
    "if": {
        "properties": {
            "properties": {
                "type": "object",
                "additionalProperties": {
                    "$ref": "#/definitions/property_element"
                }
            }
        }
    },
    "then": {
        "const": "td-data-schema=pass"
    },
    "else": {
        "if": {
            "properties": {
                "actions": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/action_element"
                    }
                }
            }
        },
        "then": {
            "const": "td-at-type=pass"
        },
        "else": {
            "if": {
                "properties": {
                    "events": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/definitions/event_element"
                        }
                    }
                }
            },
            "then": {
                "const": "td-at-type=pass"
            },
            "else": {
                "const": "td-at-type=not-impl"
            }
        }

    },
    "additionalProperties": true,
    "definitions": {
        "property_element": {
            "type": "object",
            "properties": {

            },
            "additionalProperties": true
        },
        "action_element": {
            "type": "object",
            "properties": {
                                "input": {
                                    "$ref": "#/definitions/dataSchema"
                                },
                                "output": {
                                    "$ref": "#/definitions/dataSchema"
                                }
            },
            "additionalProperties": true
        },
        "event_element": {
            "type": "object",
            "properties": {
                                "subscription": {
                                    "$ref": "#/definitions/dataSchema"
                                },
                                "data": {
                                    "$ref": "#/definitions/dataSchema"
                                },
                                "cancellation": {
                                    "$ref": "#/definitions/dataSchema"
                                }
            },
            "additionalProperties": true
        },
        "dataSchema": {
            "type": "object",
            "properties": {
                "description": {
                    "$ref": "#/definitions/description"
                },
                "title": {
                    "$ref": "#/definitions/title"
                },
                "descriptions": {
                    "$ref": "#/definitions/descriptions"
                },
                "titles": {
                    "$ref": "#/definitions/titles"
                },
                "writeOnly": {
                    "type": "boolean"
                },
                "readOnly": {
                    "type": "boolean"
                },
                "oneOf": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dataSchema"
                    }
                },
                "unit": {
                    "type": "string"
                },
                "enum": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true
                },
                "const": {},
                "type": {
                    "type": "string",
                    "enum": [
                        "boolean",
                        "integer",
                        "number",
                        "string",
                        "object",
                        "array",
                        "null"
                    ]
                },
                "items": {
                    "$ref": "#/definitions/dataSchema"
                },
                "maxItems": {

                    "type": "integer",
                    "minimum": 0

                },
                "minItems": {

                    "type": "integer",
                    "minimum": 0

                },
                "minimum": {
                    "type": "number"
                },
                "maximum": {
                    "type": "number"
                },
                "properties": {
                    "$ref": "#/definitions/dataSchema"
                },
                "required": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    }
}